{"ast":null,"code":"//import { useHistory } from \"react-router-dom\";\nimport M from 'materialize-css';\nconst apiServer = \"https://exposicion-virtual.herokuapp.com\"; //\"http://localhost:7000\"\n\nconst postearUpdateEntity = props => {\n  const history = props.historyProp;\n  const entityClass = props.entityClass;\n  const entity = props.entity;\n  const atributes = props.atributes;\n  console.log(entityClass);\n  fetch(`${apiServer}/${entityClass}/${entity.id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(atributes)\n  })\n  /*\n    .then((res) => res.json())\n    .then((data) => {\n        if (!data.error) {\n            M.toast({\n                html: `${entityClass} modificado exitosamente`,\n                classes: \"#388e3c green darken-2\",\n            });\n            history.push(\"/admin\");\n        } else {\n            M.toast({\n                html: data.error, classes: \"#c62828 red darken-3\"\n            \n            PROBANDO LA OTRA VERSION YA QUE ESTE NO LEIA ERRORES VER AHORA!\n                */\n  .then(res => {\n    console.log(res);\n\n    if (res.ok) {\n      M.toast({\n        html: `${entityClass} modificado exitosamente`,\n        classes: \"#388e3c green darken-2\"\n      });\n      history.push(\"/admin\");\n    } else {\n      M.toast({\n        html: res.statusText,\n        classes: \"#c62828 red darken-3\"\n      });\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst postearAddEntity = props => {\n  const history = props.historyProp;\n  const entityClass = props.entityClass;\n  const atributes = props.atributes;\n  fetch(`${apiServer}/${entityClass}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(atributes)\n  }).then(res => res.json()).then(data => {\n    if (data.error) {\n      M.toast({\n        html: data.error,\n        classes: \"#c62828 red darken-3\"\n      });\n    } else {\n      M.toast({\n        html: `${entityClass} agregado exitosamente`,\n        classes: \"#388e3c green darken-2\"\n      });\n      history.push(\"/admin\");\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst postearDeleteEntity = props => {\n  const history = props.historyProp;\n  const entityClass = props.entityClass;\n  const id = props.id;\n  fetch(`${apiServer}/${entityClass}/${id}`, {\n    method: 'DELETE',\n    headers: {}\n    /*     }).then((res) => res.json())\n            .then((data) => {\n                if (data.error) {\n                    M.toast({\n                        html: data.error, classes: \"#c62828 red darken-3\"\n                    });\n                } else {\n                    M.toast({\n                        html: `${entityClass} eliminado exitosamente`,\n                        classes: \"#388e3c green darken-2\",\n                    });\n                    history.push(\"/admin\");\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            }); */\n\n  }).then(res => {\n    console.log(res);\n\n    if (res.ok) {\n      M.toast({\n        html: `${entityClass} eliminado exitosamente`,\n        classes: \"#388e3c green darken-2\"\n      });\n      history.push(\"/admin\");\n    } else {\n      M.toast({\n        html: res.statusText,\n        classes: \"#c62828 red darken-3\"\n      });\n    }\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst postearGetEntity = props => {\n  const entityClass = props.entityClass;\n  const functionD = props.fx;\n  fetch(`${apiServer}/${entityClass}`, {\n    headers: {}\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    }\n  }).then(result => {\n    functionD(result);\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nexport { postearUpdateEntity, postearAddEntity, postearDeleteEntity, postearGetEntity };","map":{"version":3,"sources":["/home/cristian/Documentos/ProyectosGIT/exposicionVirtualFrontend/src/components/AdminPanel/FetchFunctions.js"],"names":["M","apiServer","postearUpdateEntity","props","history","historyProp","entityClass","entity","atributes","console","log","fetch","id","method","headers","body","JSON","stringify","then","res","ok","toast","html","classes","push","statusText","catch","err","postearAddEntity","json","data","error","postearDeleteEntity","postearGetEntity","functionD","fx","result"],"mappings":"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","sourcesContent":["//import { useHistory } from \"react-router-dom\";\nimport M from 'materialize-css'\n\nconst apiServer = \"https://exposicion-virtual.herokuapp.com\" //\"http://localhost:7000\"\n\nconst postearUpdateEntity = (props) => {\n    const history = props.historyProp\n    const entityClass = props.entityClass\n    const entity = props.entity\n    const atributes = props.atributes\n\n    console.log(entityClass)\n\n    fetch(`${apiServer}/${entityClass}/${entity.id}`, {\n        method: \"PUT\",\n        headers: {\n            \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(\n            atributes\n        )\n    })/*\n        .then((res) => res.json())\n        .then((data) => {\n            if (!data.error) {\n                M.toast({\n                    html: `${entityClass} modificado exitosamente`,\n                    classes: \"#388e3c green darken-2\",\n                });\n                history.push(\"/admin\");\n            } else {\n                M.toast({\n                    html: data.error, classes: \"#c62828 red darken-3\"\n                \n                PROBANDO LA OTRA VERSION YA QUE ESTE NO LEIA ERRORES VER AHORA!\n                    */\n        .then((res) => {\n            console.log(res)\n            if (res.ok) {\n                M.toast({\n                    html: `${entityClass} modificado exitosamente`,\n                    classes: \"#388e3c green darken-2\",\n                });\n                history.push(\"/admin\");\n            } else {\n                M.toast({ html: res.statusText, classes: \"#c62828 red darken-3\" });\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n};\n\nconst postearAddEntity = (props) => {\n    const history = props.historyProp\n    const entityClass = props.entityClass\n    const atributes = props.atributes\n\n    fetch(`${apiServer}/${entityClass}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(\n            atributes\n        )\n    })\n        .then((res) => res.json())\n        .then((data) => {\n            if (data.error) {\n                M.toast({\n                    html: data.error, classes: \"#c62828 red darken-3\"\n                });\n            } else {\n                M.toast({\n                    html: `${entityClass} agregado exitosamente`,\n                    classes: \"#388e3c green darken-2\",\n                });\n                history.push(\"/admin\");\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n};\n\nconst postearDeleteEntity = (props) => {\n    const history = props.historyProp\n    const entityClass = props.entityClass\n    const id = props.id\n\n    fetch(`${apiServer}/${entityClass}/${id}`, {\n        method: 'DELETE',\n        headers: {\n        }\n        /*     }).then((res) => res.json())\n                .then((data) => {\n                    if (data.error) {\n                        M.toast({\n                            html: data.error, classes: \"#c62828 red darken-3\"\n                        });\n                    } else {\n                        M.toast({\n                            html: `${entityClass} eliminado exitosamente`,\n                            classes: \"#388e3c green darken-2\",\n                        });\n                        history.push(\"/admin\");\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                }); */\n    }).then((res) => {\n        console.log(res)\n        if (res.ok) {\n            M.toast({\n                html: `${entityClass} eliminado exitosamente`,\n                classes: \"#388e3c green darken-2\",\n            });\n            history.push(\"/admin\");\n        } else {\n            M.toast({ html: res.statusText, classes: \"#c62828 red darken-3\" });\n        }\n    })\n        .catch((err) => {\n            console.log(err);\n        })\n};\n\nconst postearGetEntity = (props) => {\n    const entityClass = props.entityClass\n    const functionD = props.fx\n\n    fetch(`${apiServer}/${entityClass}`, {\n        headers: {\n        }\n    })\n        .then((res) => {\n            if (res.ok) {\n                return res.json()\n            }\n        })\n        .then((result) => {\n            functionD(result)\n        })\n        .catch((err => {\n            console.log(err)\n        }))\n}\n\nexport { postearUpdateEntity, postearAddEntity, postearDeleteEntity, postearGetEntity };"]},"metadata":{},"sourceType":"module"}