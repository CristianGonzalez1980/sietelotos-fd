{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documentos/ProyectosGIT/exposicionVirtualFrontend/src/components/AdminPanel/ListOfProductToUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect\n/*, useRef*/\n} from 'react';\nimport UpdateProductoForm from './UpdateProductoForm';\nimport '../../styles/ListOfProductToUpdate.css';\nimport AdminProductSearchBar from '../AdminProductSearchBar';\nimport CardProductwFx from './CardProductwFx';\nimport { postearGetEntity } from '../AdminPanel/FetchFunctions';\n\nconst ListOfProductToUpdate = props => {\n  _s();\n\n  const company = props.company;\n  const [products, setproducts] = useState([]);\n  const [cliked, setCliked] = useState(null); //const [prevProducts, setprevProducts] = useState([])\n\n  useEffect(() => {\n    if (products.length === 0) {\n      postearGetEntity({\n        entityClass: `products/supplier/${company.id}`,\n        fx: setproducts\n      });\n    }\n  }, []);\n\n  const doUpdateProduct = (products, product) => {\n    setCliked( /*#__PURE__*/React.createElement(UpdateProductoForm, {\n      product: product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }));\n  };\n\n  const listOfProducts = () => {\n    if (products) {\n      return /*#__PURE__*/React.createElement(CardProductwFx, {\n        prs: products,\n        fx: doUpdateProduct,\n        icon: \"edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      });\n    }\n  };\n\n  return cliked ? cliked : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AdminProductSearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, !products ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"Loading...\") : listOfProducts()));\n};\n\n_s(ListOfProductToUpdate, \"md+8hm8K3VoDYR+cB2NL+bEXW4Q=\");\n\n_c = ListOfProductToUpdate;\nexport default ListOfProductToUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfProductToUpdate\");","map":{"version":3,"sources":["/home/cristian/Documentos/ProyectosGIT/exposicionVirtualFrontend/src/components/AdminPanel/ListOfProductToUpdate.js"],"names":["React","useState","useEffect","UpdateProductoForm","AdminProductSearchBar","CardProductwFx","postearGetEntity","ListOfProductToUpdate","props","company","products","setproducts","cliked","setCliked","length","entityClass","id","fx","doUpdateProduct","product","listOfProducts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC;AAAS;AAAnC,OAAuD,OAAvD;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAO,wCAAP;AACA,OAAOC,qBAAP,MAAkC,0BAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC,CAHuC,CAIvC;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,QAAQ,CAACI,MAAT,KAAoB,CAAxB,EAA2B;AACzBR,MAAAA,gBAAgB,CAAC;AACfS,QAAAA,WAAW,EAAG,qBAAoBN,OAAO,CAACO,EAAG,EAD9B;AACiCC,QAAAA,EAAE,EAAEN;AADrC,OAAD,CAAhB;AAGD;AACF,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMO,eAAe,GAAG,CAACR,QAAD,EAAWS,OAAX,KAAuB;AAC7CN,IAAAA,SAAS,eAAC,oBAAC,kBAAD;AAAoB,MAAA,OAAO,EAAEM,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIV,QAAJ,EAAc;AACZ,0BAAQ,oBAAC,cAAD;AAAgB,QAAA,GAAG,EAAEA,QAArB;AAA+B,QAAA,EAAE,EAAEQ,eAAnC;AAAoD,QAAA,IAAI,EAAC,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACD;AACF,GAJD;;AAKA,SACEN,MAAM,GACJA,MADI,gBAGJ;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,CAACF,QAAD,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,GAGEU,cAAc,EALpB,CAFF,CAJJ;AAgBD,CAvCD;;GAAMb,qB;;KAAAA,qB;AAyCN,eAAeA,qBAAf","sourcesContent":["import React, { useState, useEffect/*, useRef*/ } from 'react'\nimport UpdateProductoForm from './UpdateProductoForm'\nimport '../../styles/ListOfProductToUpdate.css'\nimport AdminProductSearchBar from '../AdminProductSearchBar'\nimport CardProductwFx from './CardProductwFx';\nimport { postearGetEntity } from '../AdminPanel/FetchFunctions';\n\nconst ListOfProductToUpdate = (props) => {\n  const company = props.company\n  const [products, setproducts] = useState([])\n  const [cliked, setCliked] = useState(null)\n  //const [prevProducts, setprevProducts] = useState([])\n\n  useEffect(() => {\n    if (products.length === 0) {\n      postearGetEntity({\n        entityClass: `products/supplier/${company.id}`, fx: setproducts\n      });\n    }\n  }, [])\n\n  const doUpdateProduct = (products, product) => {\n    setCliked(<UpdateProductoForm product={product} />)\n  }\n\n  const listOfProducts = () => {\n    if (products) {\n      return (<CardProductwFx prs={products} fx={doUpdateProduct} icon='edit' />)\n    }\n  }\n  return (\n    cliked ?\n      cliked\n      :\n      <div className=\"row\">\n        <AdminProductSearchBar />\n        <div>\n          {\n            !products ?\n              <p>Loading...</p>\n              :\n              listOfProducts()\n          }\n        </div>\n      </div>\n  )\n}\n\nexport default ListOfProductToUpdate;"]},"metadata":{},"sourceType":"module"}