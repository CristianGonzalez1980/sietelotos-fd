{"ast":null,"code":"var _jsxFileName = \"/home/cristian/Documentos/ProyectosGIT/sietelotos-fd/src/components/Banner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Slider, Slide, Caption } from 'react-materialize';\nimport \"../styles/Banner.css\";\nimport { postearGetEntity } from \"./AdminPanel/FetchFunctions\";\n\nconst Banner = () => {\n  _s();\n\n  const [banners, setbanners] = useState(null);\n  useEffect(() => {\n    if (!banners) {\n      postearGetEntity({\n        entityClass: \"banners/HOME\",\n        fx: setbanners\n      });\n    }\n  }, [banners]);\n\n  const getBanners = () => {\n    if (!banners || banners.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"preloader-wrapper big active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spinner-layer spinner-blue-only\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"circle-clipper left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"gap-patch\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"circle-clipper right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }\n      }))));\n    } else {\n      const list = banners.map(banner => {\n        return /*#__PURE__*/React.createElement(Slide, {\n          image: /*#__PURE__*/React.createElement(\"img\", {\n            alt: \"\",\n            id: \"bannerHome\",\n            src: banner.image,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Caption, {\n          placement: \"center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }\n        }));\n      });\n      return list;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Slider, {\n    id: \"indicatorsHomeBanner\",\n    fullscreen: false,\n    options: {\n      duration: 500,\n      height: 400,\n      indicators: true,\n      interval: 6000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, getBanners());\n};\n\n_s(Banner, \"As7tM+rTVSsl6W/zp0WjX5EVgmw=\");\n\n_c = Banner;\n;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["/home/cristian/Documentos/ProyectosGIT/sietelotos-fd/src/components/Banner.js"],"names":["React","useState","useEffect","Slider","Slide","Caption","postearGetEntity","Banner","banners","setbanners","entityClass","fx","getBanners","length","list","map","banner","image","duration","height","indicators","interval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,QAAuC,mBAAvC;AACA,OAAO,sBAAP;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,OAAL,EAAc;AACZF,MAAAA,gBAAgB,CAAC;AAAEI,QAAAA,WAAW,EAAE,cAAf;AAA+BC,QAAAA,EAAE,EAAEF;AAAnC,OAAD,CAAhB;AACD;AACF,GAJQ,EAIN,CAACD,OAAD,CAJM,CAAT;;AAMA,QAAMI,UAAU,GAAG,MAAM;AACvB,QAAI,CAACJ,OAAD,IAAYA,OAAO,CAACK,MAAR,KAAmB,CAAnC,EAAsC;AACpC,0BACE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAGQ;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACJ;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,CAHR,eAKQ;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACJ;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADI,CALR,CADF,CADF;AAaD,KAdD,MAcO;AACL,YAAMC,IAAI,GAAGN,OAAO,CAACO,GAAR,CAAaC,MAAD,IAAY;AACnC,4BACE,oBAAC,KAAD;AAAO,UAAA,KAAK,eAAE;AAAK,YAAA,GAAG,EAAC,EAAT;AAAY,YAAA,EAAE,EAAC,YAAf;AAA4B,YAAA,GAAG,EAAEA,MAAM,CAACC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAMD,OAPY,CAAb;AASA,aAAOH,IAAP;AACD;AACF,GA3BD;;AA6BA,sBACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,sBAAX;AACE,IAAA,UAAU,EAAE,KADd;AAEE,IAAA,OAAO,EAAE;AACPI,MAAAA,QAAQ,EAAE,GADH;AAEPC,MAAAA,MAAM,EAAE,GAFD;AAGPC,MAAAA,UAAU,EAAE,IAHL;AAIPC,MAAAA,QAAQ,EAAE;AAJH,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGT,UAAU,EATb,CADF;AAaD,CAnDD;;GAAML,M;;KAAAA,M;AAoDN;AAEA,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Slider, Slide, Caption } from 'react-materialize'\nimport \"../styles/Banner.css\";\nimport { postearGetEntity } from \"./AdminPanel/FetchFunctions\";\n\nconst Banner = () => {\n  const [banners, setbanners] = useState(null)\n\n  useEffect(() => {\n    if (!banners) {\n      postearGetEntity({ entityClass: \"banners/HOME\", fx: setbanners });\n    }\n  }, [banners])\n\n  const getBanners = () => {\n    if (!banners || banners.length === 0) {\n      return (\n        <div className=\"preloader-wrapper big active\">\n          <div className=\"spinner-layer spinner-blue-only\">\n            <div className=\"circle-clipper left\">\n              <div className=\"circle\"></div>\n            </div><div className=\"gap-patch\">\n              <div className=\"circle\"></div>\n            </div><div className=\"circle-clipper right\">\n              <div className=\"circle\"></div>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      const list = banners.map((banner) => {\n        return (\n          <Slide image={<img alt=\"\" id=\"bannerHome\" src={banner.image} />}>\n            <Caption placement=\"center\">\n            </Caption>\n          </Slide>\n        )\n      }\n      )\n      return list\n    }\n  }\n\n  return (\n    <Slider id=\"indicatorsHomeBanner\"\n      fullscreen={false}\n      options={{\n        duration: 500,\n        height: 400,\n        indicators: true,\n        interval: 6000\n      }}\n    >\n      {getBanners()}\n    </Slider>\n  );\n};\n;\n\nexport default Banner;\n"]},"metadata":{},"sourceType":"module"}